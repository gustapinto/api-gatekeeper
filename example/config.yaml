# The application HTTP API configuration
api:
  # The address on which the application HTTP endpoints will listen
  address: "localhost:3000"
  # The application authentication method, can be "basic", for basic auth, "jwt"
  # for JWT based workflows (the JWT will represent the user with all properties
  # and permissions)
  #
  # Required request headers per authType:
  # - basic:
  #   - Authorization: Basic <username and password as base64>
  # - jwt:
  #   - Authorization: Bearer <signed JWT Token>s
  authType: "basic"
  # (Optional) The "jwt" token expiration duration, defaults to 30m. For the supported
  # values and syntax please see (https://pkg.go.dev/time#ParseDuration)
  tokenExpiration: "6h"
  # (Optional), The "jwt" token secret
  jwtSecret: "some-super-secret-secret"
  # (Optional) The application user, it will be persisted on the application startup.
  user:
    # The application user login
    login: "admin"
    # The application user password
    password: "admin"

# The application database configuration
database:
  # The database provider. Supported providers:
  # - "postgres": For PostgreSQL 13+ databases
  # - "sqlite": For SQLite databases
  provider: "sqlite"
  # The database connection dsn
  dsn: "gatekeeper.db"

# The backends configuration, it is a list of backend proxies
backends:
  - # The backend name
    name: "ping-backend"
    # The backend host or address
    host: "http://localhost:8080"
    # (Optional) If true will pass all requests headers to backend, default=false
    passHeaders: true
    # (Optional) The authentication scopes required for every route in this backend
    scopes:
      - "ping-backend-scope"
    # (Optional) The static headers to be included in the request for every route in this backend
    headers:
      Authorization: "Bearer foobar"
      X-Example-Header-backend: "example backend header"
    # A list of routes in the backend
    routes:
      - # The route method, any HTTP method can be used, but the route method must be equal to the
        # HTTP method used in your application route
        method: "GET"
        # The absolute path on your application, path variables are replicated from the "gatekeeperPath"
        # as long as both have the same name. The path must follow the Go ServeMux URL Patterns syntax
        # (https://pkg.go.dev/net/http#hdr-Patterns-ServeMux). Query Params and Headers will be replicated
        backendPath: "/ping"
        # (Optional) The absolute path that will be exposed by the api-gatekeeper, path variables are
        # replicated to the "backendPath" as long as both have the same name. If not provided the
        # "backendPath" will be used. The path must follow the Go ServeMux URL Patterns syntax
        # (https://pkg.go.dev/net/http#hdr-Patterns-ServeMux). Query Params and Headers will be replicated
        gatekeeperPath: "/ping-v1"
        # (Optional) The timeout in seconds, set to 0 or omit it to dont timeout
        timeoutSeconds: 30
        # (Optional) If this route is public. Public routes do not require a Authorization header to
        # be acessed
        isPublic: false
        # (Optional) If true will pass all requests headers to backend, this is overrided by the
        # "backend.passHeaders", default=false
        passHeaders: true
        # (Optional) The authentication scopes required for this route, they will be stacked with the
        # backend scopes
        scopes:
          - "ping-backend.get-ping-scope"
        # (Optional) The static headers to be included in the request for this route, they will be
        # stacked with the backend headers
        headers:
          X-Example-Header-Route: "example route header"
